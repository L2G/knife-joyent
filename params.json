{"name":"knife-joyent","tagline":"Opscode Chef knife plug-in for Joyent CloudAPI","body":"Knife Joyent\r\n===\r\n\r\nThis is a [Knife](http://wiki.opscode.com/display/chef/Knife) plug-in for Joyent CloudAPI. This plug-in gives knife\r\nthe ability to create, bootstrap, and manage servers on the [Joyent Public Cloud](http://www.joyentcloud.com/) as well as Cloud providers powered by Joyent's [SmartDataCenter](http://www.joyent.com/products/smartdatacenter/) product offering.\r\n\r\nFor more information on Joyent CloudAPI, see: [CloudAPI Documentation](http://api.joyentcloud.com/docs)\r\n\r\n## Installation\r\n\r\nWith chef already installed ``(> 0.10.0)``:\r\n\r\n    gem install knife-joyent\r\n\r\n## Usage\r\n\r\nFor a list of commands:\r\n\r\n    knife joyent --help\r\n\r\nCurrently available commands:\r\n\r\n    knife joyent flavor list <options>\r\n    knife joyent image list <options>\r\n    knife joyent key add -f <keyfile> -k <name>\r\n    knife joyent key delete <name>\r\n    knife joyent key list\r\n    knife joyent network list\r\n    knife joyent server create (options)\r\n    knife joyent server delete <server_id>\r\n    knife joyent server list <options>\r\n    knife joyent server reboot <server_id>\r\n    knife joyent server resize <server_id> -f <flavor>\r\n    knife joyent server start <server_id>\r\n    knife joyent server stop <server_id>\r\n    knife joyent server metadata update <server_id> -m <json>\r\n    knife joyent server metadata delete <server_id> <options>\r\n    knife joyent snapshot create <server_id> <snapshot_name>\r\n    knife joyent snapshot delete <server_id> <snapshot_name>\r\n    knife joyent snapshot list <server_id>\r\n    knife joyent tag create <server_id> <tag> <value>\r\n    knife joyent tag delete <server_id> <tag>\r\n    knife joyent tag delete <server_id> -A\r\n    knife joyent tag list <server_id>\r\n\r\n## Example Usage\r\n\r\nThe following command will provision an Ubuntu 12.04 with 1GB of memory and bootstrap it with chef\r\n\r\n    # knife joyent server create \\\r\n        --joyent-api-version '~7.0' \\\r\n        --flavor \"Small 1GB\" \\\r\n        --networks 42325ea0-eb62-44c1-8eb6-0af3e2f83abc,c8cde927-6277-49ca-82a3-741e8b23b02f \\\r\n        --image d2ba0f30-bbe8-11e2-a9a2-6bc116856d85 \\\r\n        --node-name 'cookbuntu1' \\\r\n        --server-name 'cookbuntu1' \\\r\n\r\n    Creating machine cookbuntu1\r\n    Waiting for Server to be Provisioned\r\n    ......................\r\n    Bootstrap IP Address 165.225.150.195\r\n    No user defined in knife config for provision tagging -- continuing\r\n    Created machine:\r\n    ID: ecd7c515-8079-41d9-a04a-0c5a1d93a2da\r\n    Name: cookbuntu1\r\n    State: running\r\n    Type: virtualmachine\r\n    Dataset: sdc:jpc:ubuntu-12.04:2.4.2\r\n    IPs: 165.225.150.195\r\n    Waiting for server to fully initialize...\r\n    ...\r\n\r\nPlease see ``knife joyent server create --help`` for more options\r\n\r\n## Configuration\r\n\r\nThe following options can be specified in your knife configuration file\r\n``knife.rb``\r\n\r\n#### Required\r\n\r\nYou can authenticate against CloudAPI using either:\r\n\r\nan ssh key (recommended)\r\n\r\n    knife[:joyent_username] = \"Your Joyent CloudAPI username\"\r\n    knife[:joyent_keyname] = \"Name of key stored on Joyent\"\r\n    knife[:joyent_keyfile] = \"/path/to/your/private/key\"\r\n\r\n    # Optional / not-recommended -- defaults to using ssh-agent\r\n    knife[:joyent_keyphrase] = \"mypassphrase\"\r\n\r\nor username and password\r\n\r\n    knife[:joyent_username] = \"Your Joyent CloudAPI username\"\r\n    knife[:joyent_password] = \"Your Joyent CloudAPI password\"\r\n\r\nWhen authenticating with your ssh key (which we highly recommend), knife-joyent will\r\nattempt to use ssh-agent to sign the request using the key configured with\r\n``knife[:joyent_keyname]``. If no ssh-agent is present or if the specified identity\r\nisn't found in the agent, you may be prompted for a pass-phrase. If you do not want\r\nto use an ``ssh-agent``, you may optionally configure ``knife[:joyent_passphrase]``\r\nto automatically unlock the key for authentication.\r\n\r\n#### Optional Configuration\r\n\r\n**``joyent_api_url``**\r\n\r\nSpecify a custom API endpoint, this is required if you want to specify\r\nwhere you want to provision your machines, or if you are using knife with a\r\nprovider powered by [SmartDataCenter](http://www.joyent.com/products/smartdatacenter/).\r\n\r\n    # Defaults to https://us-west-1.api.joyentcloud.com/\r\n    knife[:joyent_api_url] = \"https://us-sw-1.api.joyentcloud.com/\"\r\n\r\n**``joyent_metadata``**\r\n\r\nMetadata to apply to each provisioned machine via the Metadata API. This should take\r\nthe form of a hash with a single level of nesting. See the\r\n[Metadata API](http://wiki.joyent.com/wiki/display/sdc/Using+the+Metadata+API) for more info.\r\n\r\n    knife[:joyent_metadata] = {\r\n      \"some_data\" => \"value\"\r\n    }\r\n\r\n**``joyent_version``**\r\n\r\nBy default, knife-joyent will use the version of the Joyent Cloud API that fog prefers. This\r\ncan be overridden in knife.rb as follows:\r\n\r\n    knife[:joyent_version] = \"~7.0\"\r\n\r\nSome command line options to knife-joyent subcommands may depend on the Joyent API version set.\r\n\r\n**``joyent_verify_peer``**\r\n\r\nSet to ``false`` to Disable SSL Certificate verification, required if the CloudAPI instance\r\nuses a self-signed cert. (Default: ``true``)\r\n\r\n**``provisioner``**\r\n\r\nMachines provisioned will be tagged with key ``provisioner`` containing the value specified.\r\nThis is useful for tracking source of provisions for accounts where machines are provisioned\r\nby/from different sources / users.\r\n\r\n## Contributors\r\n\r\n - [Sean Omera](https://github.com/someara) - Opscode\r\n - [Eric Saxby](https://github.com/sax) - Wanelo\r\n - [Stephen Lauck](https://github.com/stephenlauck) - ModCloth\r\n\r\n## Bootstrap template for smartos\r\n\r\nTo bootstrap chef on SmartOS, use the script provided at the [Joyent Wiki] (http://wiki.joyent.com/wiki/display/jpc2/Joyent+ChefServer+SmartMachine#JoyentChefServerSmartMachine-BootstrappingaBareImagedSmartMachinetoyourChefServer)\r\nwhich sets up chef-client with SMF and installs the basic essentials.\r\n\r\n## License\r\n\r\nCopyright 2012 Joyent, Inc\r\n\r\nAuthor: Kevin Chan <kevin@joyent.com>\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}